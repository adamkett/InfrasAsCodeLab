# code: language=yaml
# ansible-lint ./playbook_nginx.yaml 
# ansible-playbook -i ./inventory.yaml ./playbook_nginx.yaml
#
# Folder note cross distros 
#
# debian/ubuntu, default port 80,
#   /var/www/html
#
# centosstream/rocky, default port 80,
#   /usr/share/nginx/html
#   And load from /etc/nginx/default.d/*.conf
#     includes example for TLS server 

- name: KVM Lab1 playbook NGINX on Vms
  hosts: kmvlabhosts_nginx

  vars:

  tasks:

    # Lab - setup Nginx 

    - name: Ensure nginx is installed at the latest version on RHEL based Hosts
      become: true
      ansible.builtin.package:
        name: nginx
        state: latest

    - name: Ensure nginx is running
      become: true
      service:
        name: nginx
        state: started

    - name: RHEL - Add the user 'www-ansible' with a specific uid and a primary group of 'nginx'
      when: ansible_os_family == 'RedHat'
      become: true
      ansible.builtin.user:
        name: www-ansible
        shell: /sbin/nologin
        comment: Ansible WWW user
        uid: 1499
        group: nginx

    - name: Debian - Add the user 'www-ansible' with a specific uid and a primary group of 'www-data'
      when: ansible_os_family == 'Debian'
      become: true
      ansible.builtin.user:
        name: www-ansible
        shell: /usr/sbin/nologin
        comment: Ansible WWW user
        uid: 1499
        group: www-data

    - name: Create folder
      when: ansible_os_family == 'RedHat'
      become: true
      ansible.builtin.file:
        path: /storage
        mode: '0775'        
        state: directory
        owner: www-ansible
        group: nginx
  
    - name: Create folder
      when: ansible_os_family == 'Debian'
      become: true
      ansible.builtin.file:
        path: /storage
        mode: '0775'        
        state: directory
        owner: www-ansible
        group: www-data

    # only accessible if user running ansible play is logged into vault
    - name: Read-write git checkout from github
      become: true
      ansible.builtin.git:
        repo: "{{ lookup('hashi_vault', 'secret=lab/data/kvm:githubPATwww url=https://127.0.0.1:8200 validate_certs=False') }}"
        dest: /storage/www

    - name: Update folder ownership - Debian
      when: ansible_os_family == 'Debian'
      become: true
      ansible.builtin.file:
        path: /storage
        state: directory
        owner: www-ansible
        group: www-data
        recurse: true

    - name: Update folder ownership - Redhat
      when: ansible_os_family == 'RedHat'
      become: true
      ansible.builtin.file:
        path: /storage
        state: directory
        owner: www-ansible
        group: nginx
        recurse: true

# TODO: ubuntu instance 1 = HAProxy, all other VMs NGINX content servers 
# instance 2 smaller disk and diff ansible group 
# 
# TODO: link the folders to new git repos or update the configs  
# TODO: SSL Lets encrypt
# TODO: HAProxy to the VMs - with deadhost and a variable to ident host
# 
# TODO: Generate per host random password and save back to VAULT? 
# 
# examples ref folder nginx changes needed - note ansible validate 
#   "sed  -i '/PermitRootLogin/s/.*/PermitRootLogin yes/' /etc/ssh/sshd_config",
#      "systemctl restart sshd"
# 
#    # Get rid of default ubuntu user
#    # https://askubuntu.com/questions/1461894/cloud-init-always-adding-ubuntu-user
#    - name: Remove the user 'ubuntu'
#      when: ansible_os_family == 'Debian'
#      become: true
#      ansible.builtin.user:
#        name: ubuntu
#        state: absent
#        remove: yes #delete dirs
#
#    - name: Remove sudo access for deleted 'ubnt' user
#      when: ansible_os_family == 'Debian'
#      become: true
#      ansible.builtin.lineinfile:
#        path: /etc/sudoers.d/90-cloud-init-users
#        state: absent
#        search_string: 'ubuntu ALL=(ALL) NOPASSWD:ALL'
#        validate: 'visudo -cf %s'
#
#    - name: Remove left over config for deleted 'ubnt' user
#      when: ansible_os_family == 'Debian'
#      become: true
#      ansible.builtin.lineinfile:
#        path: /etc/sudoers.d/90-cloud-init-users
#        state: absent
#        search_string: '# User rules for ubuntu'
#        validate: 'visudo -cf %s'